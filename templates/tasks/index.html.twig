{% extends 'base.html.twig' %}

{% block title %}Task List{% endblock %}

{% block body %}
<div class="container mt-5">
    <div class="d-flex align-items-center mb-4">
        <h2 class="me-auto">Task List</h2>

        <form method="post" action="{{ path('app_logout') }}">
            <button type="submit" class="btn btn-danger">Logout</button>
        </form>
    </div>


     <div class="table-responsive">
        <table class="table table-striped text-center align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Status</th>
                    <th>Assigned To</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for task in tasks %}
                    <tr>
                        <td>{{ task.name }}</td>
                        <td>{{ task.description ?: '-' }}</td>
                        <td>
                            <span class="badge {{ task.status == 'done' ? 'bg-success' : (task.status == 'in_progress' ? 'bg-warning text-dark' : 'bg-secondary') }}">
                                {{ {
                                    'to_do': 'To Do',
                                    'in_progress': 'In Progress',
                                    'done': 'Done'
                                }[task.status] | default(task.status) }}
                            </span>
                        </td>
                        <td>{{ task.assignedUser.username }}</td>
                        <td>
                            <button class="btn btn-sm btn-warning edit-task-btn" 
                                    data-task-id="{{ task.id }}" 
                                    data-task-name="{{ task.name }}" 
                                    data-task-status="{{ task.status }}" 
                                    data-task-user="{{ task.assignedUser.id }}">
                                Edit
                            </button>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
    <div class="d-flex justify-content-center mb-4">
        <button class="btn btn-primary mt-3" id="addTaskBtn">+ Add Task</button>
    </div>
</div>

<div class="modal fade" id="taskModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <label class="mt-3">Name:</label>
                <input type="text" id="taskName" class="form-control" placeholder="Task Name">
                <label class="mt-3">Description:</label>
                <input id="taskDescription" class="form-control" placeholder="Description">
                <label class="mt-3">Status:</label>
                <select id="taskStatus" class="form-select" placeholder="Status">
                    <option value="to_do" selected>To Do</option>
                    <option value="in_progress">In Progress</option>
                    <option value="done">Done</option>
                </select>
                {% if 'ROLE_ADMIN' in app.user.roles %}
                    <label class="mt-3">Assign To:</label>
                    <select id="taskUser" class="form-select">
                        {% for user in users %}
                            <option value="{{ user.id }}">{{ user.username }}</option>
                        {% endfor %}
                    </select>
                {% endif %}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveTaskBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editTaskModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <label class="mt-3">Name:
                <input type="text" id="modalTaskName" class="form-control" placeholder="Task Name" style="width: 225%">
                <label class="mt-3">Status:</label>
                <select id="modalTaskStatus" class="form-select" style="width: 225%">
                    <option value="to_do">To Do</option>
                    <option value="in_progress">In Progress</option>
                    <option value="done">Done</option>
                </select>
                {% if 'ROLE_ADMIN' in app.user.roles %}
                    <label class="mt-3">Assign To:</label>
                    <select id="modalTaskUser" class="form-select" style="width: 225%">
                        {% for user in users %}
                            <option value="{{ user.id }}">{{ user.username }}</option>
                        {% endfor %}
                    </select>
                {% endif %}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveTaskEditBtn">Save</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener("DOMContentLoaded", function() {
    const editButtons = document.querySelectorAll(".edit-task-btn");
    const editTaskModal = new bootstrap.Modal(document.getElementById("editTaskModal"));
    const addTaskBtn = document.getElementById('addTaskBtn');
    const saveTaskBtn = document.getElementById('saveTaskBtn');
    const createTaskModal = new bootstrap.Modal(document.getElementById('taskModal'));
    let selectedTaskId = null;

    if (addTaskBtn) {
        addTaskBtn.addEventListener('click', function() {
            createTaskModal.show();
        });
    }

    if (saveTaskBtn) {
        saveTaskBtn.addEventListener('click', function() {
            const name = document.getElementById('taskName').value;
            const description = document.getElementById('taskDescription').value;
            const status = document.getElementById('taskStatus').value;
            let taskUser = document.getElementById('taskUser');
            if(taskUser){
                const user = taskUser.value;
            }
            

            fetch('{{ path('task_create') }}', {
                method: 'POST',
                body: typeof user !== 'undefined' ? JSON.stringify({ name, description, status, user }) : JSON.stringify({ name, description, status}),
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error); 
                } else {
                    location.reload(); 
                }
            });
        });
    }

    editButtons.forEach(button => {
        button.addEventListener("click", function() {
            selectedTaskId = this.dataset.taskId;
            document.getElementById("modalTaskName").value = this.dataset.taskName;
            document.getElementById("modalTaskStatus").value = this.dataset.taskStatus;
            document.getElementById("modalTaskUser").value = this.dataset.taskUser;
            editTaskModal.show();
        });
    });

    document.getElementById("saveTaskEditBtn").addEventListener("click", function() {
        if (!selectedTaskId) return;

        const name = document.getElementById('modalTaskName').value;
        const status = document.getElementById('modalTaskStatus').value;
        const user = document.getElementById('modalTaskUser').value;

 

        fetch(`/tasks/update/${selectedTaskId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: typeof user !== 'undefined' ? JSON.stringify({ name, status, user }) : JSON.stringify({ name, status}),
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert(data.error);
            } else {
                location.reload();
            }
        })
        .catch(error => console.error("Error:", error));
    });
});
</script>
{% endblock %}
